name: Manual Branch Update

on:
  workflow_dispatch:
    inputs:
      from-branch:
        description: "Source branch (dev or stg)"
        required: true
        default: "dev"
        type: choice
        options: ["dev", "stg"]

      to-branch:
        description: "Target branch (stg or main)"
        required: true
        default: "stg"
        type: choice
        options: ["stg", "main"]

jobs:
  check-permissions:
    name: Check Permissions
    runs-on: ubuntu-latest
    outputs:
      is-admin: ${{ steps.check-permissions.outputs.is-admin }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check if user is admin
        id: check-permissions
        run: |
          # Retrieve the admin username from secrets
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          # Get the GitHub username of the person who triggered the workflow
          USERNAME=${{ github.actor }}
          if [ "$USERNAME" == "$ADMIN_USERNAME" ]; then
            echo "is-admin=true" >> $GITHUB_ENV
          else
            echo "is-admin=false" >> $GITHUB_ENV
          fi

      - name: Fail if not admin
        if: ${{ env.is-admin == 'false' }}
        run: |
          echo "You must be an admin to trigger this workflow."
          exit 1

  create-pull-request:
    name: Create Pull Request from ${{ inputs.from-branch }} to ${{ inputs.to-branch }}
    runs-on: ubuntu-latest
    needs: check-permissions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Merge ${{ inputs.from-branch }} into ${{ inputs.to-branch }}"
          branch: ${{ inputs.from-branch }}
          base: ${{ inputs.to-branch }}
          title: "Merge ${{ inputs.from-branch }} into ${{ inputs.to-branch }}"
          body: "This is an automated pull request created to merge ${{ inputs.from-branch }} into ${{ inputs.to-branch }}."
          draft: false

  approve-pull-request:
    name: Auto Approve Pull Request
    runs-on: ubuntu-latest
    needs: create-pull-request

    steps:
      - name: Approve PR
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  merge-pull-request:
    name: Merge the Pull Request
    runs-on: ubuntu-latest
    needs: approve-pull-request

    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Merge PR via GitHub CLI
        run: |
          gh pr merge ${{ needs.create-pull-request.outputs.pull_request_number }} --merge --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
