name: Manual Preview Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy (dev or stg)"
        required: true
        default: "dev"
        type: choice
        options: ["dev", "stg"]

jobs:
  check-permissions:
    name: Check Permissions
    runs-on: ubuntu-latest
    outputs:
      is-admin: ${{ steps.check-permissions.outputs.is-admin }}
    steps:
      - name: Check if user is admin
        id: check-permissions
        run: |
          # Retrieve the admin username from secrets
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          # Get the GitHub username of the person who triggered the workflow
          USERNAME=${{ github.actor }}
          if [ "$USERNAME" == "$ADMIN_USERNAME" ]; then
            echo "is-admin=true" >> $GITHUB_ENV
          else
            echo "is-admin=false" >> $GITHUB_ENV
        continue-on-error: true

      - name: Fail if not admin
        if: ${{ env.is-admin == 'false' }}
        run: |
          echo "You must be an admin to trigger this workflow."
          exit 1

  deploy-preview:
    name: Deploy to Vercel Preview
    runs-on: ubuntu-latest
    needs: check-permissions

    steps:
      - name: Cache Vercel CLI
        uses: actions/cache@v4
        with:
          path: ~/.vercel
          key: vercel-cli-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            vercel-cli-${{ runner.os }}-

      - name: Install Vercel CLI (if not cached)
        run: |
          if ! command -v vercel &> /dev/null
          then
            echo "Vercel CLI not found, installing..."
            npm install -g vercel
          else
            echo "Vercel CLI found in cache."
          fi

      - name: Deploy to Vercel Preview
        run: |
          BRANCH=${{ github.event.inputs.branch }}
          echo "Deploying branch $BRANCH to Vercel preview"
          ENVIRONMENT="development"
          if [ "$BRANCH" == "stg" ]; then
            ENVIRONMENT="staging"
          fi
          npx vercel --token $VERCEL_TOKEN --env NEXT_PUBLIC_ENV=$ENVIRONMENT --prod=false --confirm --branch $BRANCH
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_PREVIEW_TOKEN }}

      - name: Notify Success
        run: echo "Deployment to Vercel preview environment for branch ${{ github.event.inputs.branch }} is complete."
